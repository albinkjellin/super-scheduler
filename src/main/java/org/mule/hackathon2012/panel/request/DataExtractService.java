
/*
 * 
 */

package org.mule.hackathon2012.panel.request;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 2.1.3
 * Sun Jun 17 17:37:55 PDT 2012
 * Generated source version: 2.1.3
 * 
 */


@WebServiceClient(name = "DataExtractService", 
                  wsdlLocation = "file:src/main/resources/DataExtractService.wsdl",
                  targetNamespace = "http://researchnow.com/schema/panel/finance/extract/v1") 
public class DataExtractService extends Service {

    public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://researchnow.com/schema/panel/finance/extract/v1", "DataExtractService");
    public final static QName DataExtractServicePort = new QName("http://researchnow.com/schema/panel/finance/extract/v1", "DataExtractServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:src/main/resources/DataExtractService.wsdl");
        } catch (MalformedURLException e) {
            System.err.println("Can not initialize the default wsdl from file:/Users/albinkjellin/studio/hackathon/hackathon3.3/src/main/resources/DataExtractService.wsdl");
            // e.printStackTrace();
        }
        WSDL_LOCATION = url;
    }

    public DataExtractService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DataExtractService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DataExtractService() {
        super(WSDL_LOCATION, SERVICE);
    }

    /**
     * 
     * @return
     *     returns IDataExtractService
     */
    @WebEndpoint(name = "DataExtractServicePort")
    public IDataExtractService getDataExtractServicePort() {
        return super.getPort(DataExtractServicePort, IDataExtractService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IDataExtractService
     */
    @WebEndpoint(name = "DataExtractServicePort")
    public IDataExtractService getDataExtractServicePort(WebServiceFeature... features) {
        return super.getPort(DataExtractServicePort, IDataExtractService.class, features);
    }

}
